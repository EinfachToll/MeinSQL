#include "mysqlhighlighter.h"

MySQLHighlighter::MySQLHighlighter(QTextDocument *parent) : QSyntaxHighlighter(parent)
{
  HighlightingRule rule;

  fillNumbersAndOperators();
  rule.format.setForeground(Qt::red);
  foreach (const QString pattern, numberAndOperatorPatterns) {
    rule.pattern = QRegExp(pattern);
    highlightingRules.append(rule);
  }

  fillKeywords();
  rule.format.setForeground(Qt::blue);
  foreach (const QString pattern, keywordPatterns) {
    rule.pattern = QRegExp(pattern, Qt::CaseInsensitive);
    highlightingRules.append(rule);
  }

  fillFunctions();
  rule.format.setForeground(Qt::darkCyan);
  foreach (const QString pattern, functionPatterns) {
    rule.pattern = QRegExp(pattern, Qt::CaseInsensitive);
    highlightingRules.append(rule);
  }

  fillDatatypes();
  rule.format.setForeground(Qt::darkRed);
  foreach (const QString pattern, datatypePatterns) {
    rule.pattern = QRegExp(pattern, Qt::CaseInsensitive);
    highlightingRules.append(rule);
  }

  fillCharsets();
  rule.format.setForeground(QBrush(QColor(0, 195, 195)));
  foreach (const QString pattern, charsetPatterns) {
    rule.pattern = QRegExp(pattern, Qt::CaseInsensitive);
    highlightingRules.append(rule);
  }

  //Comments
  commentFormat.setForeground(QBrush(QColor(106, 182, 182)));
  rule.pattern = QRegExp("(#|-- ).*");
  rule.format = commentFormat;
  highlightingRules.append(rule);
  commentStartExpression = QRegExp("/\\*");
  commentEndExpression = QRegExp("\\*/");

  //Symbols
  rule.pattern = QRegExp("`.*`");
  rule.format.setForeground(Qt::darkGreen);
  highlightingRules.append(rule);

  //Strings
  rule.pattern = QRegExp("'.*'");
  rule.format.setForeground(Qt::red);
  highlightingRules.append(rule);
  rule.pattern = QRegExp("\".*\"");
  rule.format.setForeground(Qt::red);
  highlightingRules.append(rule);
}

void MySQLHighlighter::highlightBlock(const QString &text)
{
  if (text != "") {
    foreach (const HighlightingRule &rule, highlightingRules) {
      QRegExp expression(rule.pattern);
      int index = expression.indexIn(text);
      while (index >= 0) {
        int length = expression.matchedLength();
        setFormat(index, length, rule.format);
        index = expression.indexIn(text, index + length);
      }
    }
  }
  setCurrentBlockState(0);

  int startIndex = 0;
  if (previousBlockState() != 1)
    startIndex = commentStartExpression.indexIn(text);

  while (startIndex >= 0) {
    int endIndex = commentEndExpression.indexIn(text, startIndex);
    int commentLength;
    if (endIndex == -1) {
      setCurrentBlockState(1);
      commentLength = text.length() - startIndex;
    } else {
      commentLength = endIndex - startIndex
                      + commentEndExpression.matchedLength();
    }
    setFormat(startIndex, commentLength, commentFormat);
    startIndex = commentStartExpression.indexIn(text, startIndex + commentLength);
  }
}

void MySQLHighlighter::fillKeywords()
{
  keywordPatterns << "\\bACCESSIBLE\\b"
      << "\\bACTION\\b"
      << "\\bADD\\b"
      << "\\bAFTER\\b"
      << "\\bALGORITHM\\b"
      << "\\bALL\\b"
      << "\\bALTER\\b"
      << "\\bANALYZE\\b"
      << "\\bAND\\b"
      << "\\bARCHIVE\\b"
      << "\\bAS\\b"
      << "\\bASC\\b"
      << "\\bASENSITIVE\\b"
      << "\\bAT\\b"
      << "\\bAUTO_INCREMENT\\b"
      << "\\bAUTOCOMMIT\\b"
      << "\\bBEFORE\\b"
      << "\\bBEGIN\\b"
      << "\\bBETWEEN\\b"
      << "\\bBINARY\\b"
      << "\\bBOTH\\b"
      << "\\bBTREE\\b"
      << "\\bBY\\b"
      << "\\bCALL\\b"
      << "\\bCASCADE\\b"
      << "\\bCASCADED\\b"
      << "\\bCASE\\b"
      << "\\bCHANGE\\b"
      << "\\bCHANGED\\b"
      << "\\bCHARACTER_SET_CLIENT\\b"
      << "\\bCHARACTER\\b"
      << "\\bCHARSET\\b"
      << "\\bCHECK\\b"
      << "\\bCLOSE\\b"
      << "\\bCOLLATE\\b"
      << "\\bCOLUMN\\b"
      << "\\bCOMMENT\\b"
      << "\\bCOMMIT\\b"
      << "\\bCOMPLETION\\b"
      << "\\bCONDITION\\b"
      << "\\bCONSTRAINT\\b"
      << "\\bCONTINUE\\b"
      << "\\bCONVERT\\b"
      << "\\bCREATE\\b"
      << "\\bCROSS\\b"
      << "\\bCSV\\b"
      << "\\bCURSOR\\b"
      << "\\bDATA\\b"
      << "\\bDATABASE\\b"
      << "\\bDATABASES\\b"
      << "\\bDAY\\b"
      << "\\bDECLARE\\b"
      << "\\bDEFAULT\\b"
      << "\\bDEFINER\\b"
      << "\\bDELAYED\\b"
      << "\\bDELETE\\b"
      << "\\bDELIMITER\\b"
      << "\\bDESC\\b"
      << "\\bDESCRIBE\\b"
      << "\\bDETERMINISTIC\\b"
      << "\\bDISABLE\\b"
      << "\\bDISTINCT\\b"
      << "\\bDISTINCTROW\\b"
      << "\\bDO\\b"
      << "\\bDROP\\b"
      << "\\bDUAL\\b"
      << "\\bDUPLICATE\\b"
      << "\\bEACH\\b"
      << "\\bELSE\\b"
      << "\\bELSEIF\\b"
      << "\\bENABLE\\b"
      << "\\bENCLOSED\\b"
      << "\\bEND\\b"
      << "\\bENDS\\b"
      << "\\bENGINE\\b"
      << "\\bENGINES\\b"
      << "\\bESCAPED\\b"
      << "\\bEVENT\\b"
      << "\\bEVENTS\\b"
      << "\\bEVERY\\b"
      << "\\bEXECUTE\\b"
      << "\\bEXISTS\\b"
      << "\\bEXIT\\b"
      << "\\bEXPLAIN\\b"
      << "\\bEXTENDED\\b"
      << "\\bFALSE\\b"
      << "\\bFAST\\b"
      << "\\bFETCH\\b"
      << "\\bFLUSH\\b"
      << "\\bFOR\\b"
      << "\\bFORCE\\b"
      << "\\bFOREIGN_KEY_CHECKS\\b"
      << "\\bFOREIGN\\b"
      << "\\bFOUND\\b"
      << "\\bFROM\\b"
      << "\\bFUNCTION\\b"
      << "\\bGLOBAL\\b"
      << "\\bGRANT\\b"
      << "\\bGRANTS\\b"
      << "\\bGROUP\\b"
      << "\\bHANDLER\\b"
      << "\\bHAVING\\b"
      << "\\bHELP\\b"
      << "\\bHIGH_PRIORITY\\b"
      << "\\bHOUR\\b"
      << "\\bIDENTIFIED\\b"
      << "\\bIF\\b"
      << "\\bIGNORE\\b"
      << "\\bIN\\b"
      << "\\bINDEX\\b"
      << "\\bINFILE\\b"
      << "\\bINNER\\b"
      << "\\bINNODB\\b"
      << "\\bINOUT\\b"
      << "\\bINSENSITIVE\\b"
      << "\\bINSERT\\b"
      << "\\bINTO\\b"
      << "\\bINVOKER\\b"
      << "\\bIS\\b"
      << "\\bITERATE\\b"
      << "\\bJOIN\\b"
      << "\\bKEY\\b"
      << "\\bKEYS\\b"
      << "\\bKILL\\b"
      << "\\bLANGUAGE\\b"
      << "\\bLEADING\\b"
      << "\\bLEAVE\\b"
      << "\\bLIKE\\b"
      << "\\bLIMIT\\b"
      << "\\bLINEAR\\b"
      << "\\bLINES\\b"
      << "\\bLOAD\\b"
      << "\\bLOCAL\\b"
      << "\\bLOCALTIME\\b"
      << "\\bLOCK\\b"
      << "\\bLOOP\\b"
      << "\\bLOW_PRIORITY\\b"
      << "\\bMASTER_HOST\\b"
      << "\\bMASTER_LOG_FILE\\b"
      << "\\bMASTER_LOG_POS\\b"
      << "\\bMASTER_PASSWORD\\b"
      << "\\bMASTER_PORT\\b"
      << "\\bMASTER_SSL_VERIFY_SERVER_CERT\\b"
      << "\\bMASTER_USER\\b"
      << "\\bMASTER\\b"
      << "\\bMATCH\\b"
      << "\\bMEDIUM\\b"
      << "\\bMEMORY\\b"
      << "\\bMINUTE\\b"
      << "\\bMOD\\b"
      << "\\bMODIFIES\\b"
      << "\\bMODIFY\\b"
      << "\\bMRG_MYISAM\\b"
      << "\\bMYISAM\\b"
      << "\\bNATURAL\\b"
      << "\\bNEW\\b"
      << "\\bNO_WRITE_TO_BINLOG\\b"
      << "\\bNO\\b"
      << "\\bNOT\\b"
      << "\\bNULL\\b"
      << "\\bOLD_FOREIGN_KEY_CHECKS\\b"
      << "\\bOLD_SQL_MODE\\b"
      << "\\bOLD_UNIQUE_CHECKS\\b"
      << "\\bOLD\\b"
      << "\\bON\\b"
      << "\\bOPEN\\b"
      << "\\bOPTIMIZE\\b"
      << "\\bOPTION\\b"
      << "\\bOPTIONALLY\\b"
      << "\\bOR\\b"
      << "\\bORDER\\b"
      << "\\bOUT\\b"
      << "\\bOUTER\\b"
      << "\\bOUTFILE\\b"
      << "\\bPRECISION\\b"
      << "\\bPREPARE\\b"
      << "\\bPRESERVE\\b"
      << "\\bPRIMARY\\b"
      << "\\bPRIVILEGES\\b"
      << "\\bPROCEDURE\\b"
      << "\\bPURGE\\b"
      << "\\bQUARTER\\b"
      << "\\bQUICK\\b"
      << "\\bRANGE\\b"
      << "\\bREAD_WRITE\\b"
      << "\\bREAD\\b"
      << "\\bREADS\\b"
      << "\\bREFERENCES\\b"
      << "\\bREGEXP\\b"
      << "\\bRELEASE\\b"
      << "\\bRENAME\\b"
      << "\\bREPEAT\\b"
      << "\\bREPLACE\\b"
      << "\\bREPLICATION\\b"
      << "\\bREQUIRE\\b"
      << "\\bRESTRICT\\b"
      << "\\bRETURN\\b"
      << "\\bRETURNS\\b"
      << "\\bREVOKE\\b"
      << "\\bROLLBACK\\b"
      << "\\bROW\\b"
      << "\\bSCHEDULE\\b"
      << "\\bSCHEMA\\b"
      << "\\bSCHEMAS\\b"
      << "\\bSECOND\\b"
      << "\\bSECURITY\\b"
      << "\\bSELECT\\b"
      << "\\bSENSITIVE\\b"
      << "\\bSEPARATOR\\b"
      << "\\bSET\\b"
      << "\\bSHOW\\b"
      << "\\bSLAVE\\b"
      << "\\bSPATIAL\\b"
      << "\\bSPECIFIC\\b"
      << "\\bSQL_BIG_RESULT\\b"
      << "\\bSQL_MODE\\b"
      << "\\bSQL_SMALL_RESULT\\b"
      << "\\bSQL\\b"
      << "\\bSQLEXCEPTION\\b"
      << "\\bSQLSTATE\\b"
      << "\\bSQLWARNING\\b"
      << "\\bSSL\\b"
      << "\\bSTART\\b"
      << "\\bSTARTING\\b"
      << "\\bSTARTS\\b"
      << "\\bSTATUS\\b"
      << "\\bSTRAIGHT_JOIN\\b"
      << "\\bSUM\\b"
      << "\\bTABLE\\b"
      << "\\bTABLES\\b"
      << "\\bTEMPORARY\\b"
      << "\\bTERMINATED\\b"
      << "\\bTHEN\\b"
      << "\\bTO\\b"
      << "\\bTRAILING\\b"
      << "\\bTRANSACTION\\b"
      << "\\bTRIGGER\\b"
      << "\\bTRIGGERS\\b"
      << "\\bTRUE\\b"
      << "\\bTRUNCATE\\b"
      << "\\bUNDEFINED\\b"
      << "\\bUNDO\\b"
      << "\\bUNION\\b"
      << "\\bUNIQUE_CHECKS\\b"
      << "\\bUNIQUE\\b"
      << "\\bUNLOCK\\b"
      << "\\bUNSIGNED\\b"
      << "\\bUNTIL\\b"
      << "\\bUPDATE\\b"
      << "\\bUPGRADE\\b"
      << "\\bUSAGE\\b"
      << "\\bUSE\\b"
      << "\\bUSER\\b"
      << "\\bUSING\\b"
      << "\\bVALUES\\b"
      << "\\bVARIABLES\\b"
      << "\\bVARYING\\b"
      << "\\bVIEW\\b"
      << "\\bWARNINGS\\b"
      << "\\bWEEK\\b"
      << "\\bWHEN\\b"
      << "\\bWHERE\\b"
      << "\\bWHILE\\b"
      << "\\bWITH\\b"
      << "\\bWRITE\\b"
      << "\\bXOR\\b"
      << "\\bZEROFILL\\b";
}

void MySQLHighlighter::fillFunctions()
{
  functionPatterns << "\\bABS\\b"
      << "\\bACOS\\b"
      << "\\bADDDATE\\b"
      << "\\bADDTIME\\b"
      << "\\bAES_DECRYPT\\b"
      << "\\bAES_ENCRYPT\\b"
      << "\\bASCII\\b"
      << "\\bASIN\\b"
      << "\\bATAN\\b"
      << "\\bATAN2\\b"
      << "\\bAVG\\b"
      << "\\bBENCHMARK\\b"
      << "\\bBIN\\b"
      << "\\bBIT_AND\\b"
      << "\\bBIT_COUNT\\b"
      << "\\bBIT_LENGTH\\b"
      << "\\bBIT_OR\\b"
      << "\\bBIT_XOR\\b"
      << "\\bCAST\\b"
      << "\\bCEIL\\b"
      << "\\bCEILING\\b"
      << "\\bCHAR_LENGTH\\b"
      << "\\bCHARACTER_LENGTH\\b"
      << "\\bCOALESCE\\b"
      << "\\bCOERCIBILITY\\b"
      << "\\bCOLLATION\\b"
      << "\\bCOMPRESS\\b"
      << "\\bCONCAT_WS\\b"
      << "\\bCONCAT\\b"
      << "\\bCONNECTION_ID\\b"
      << "\\bCONV\\b"
      << "\\bCONVERT_TZ\\b"
      << "\\bCOS\\b"
      << "\\bCOT\\b"
      << "\\bCOUNT\\b"
      << "\\bCRC32\\b"
      << "\\bCURDATE\\b"
      << "\\bCURRENT_DATE\\b"
      << "\\bCURRENT_TIME\\b"
      << "\\bCURRENT_TIMESTAMP\\b"
      << "\\bCURRENT_USER\\b"
      << "\\bCURTIME\\b"
      << "\\bDATE_ADD\\b"
      << "\\bDATE_FORMAT\\b"
      << "\\bDATE_SUB\\b"
      << "\\bDATEDIFF\\b"
      << "\\bDAY_HOUR\\b"
      << "\\bDAY_MICROSECOND\\b"
      << "\\bDAY_MINUTE\\b"
      << "\\bDAY_SECOND\\b"
      << "\\bDAYNAME\\b"
      << "\\bDAYOFMONTH\\b"
      << "\\bDAYOFWEEK\\b"
      << "\\bDAYOFYEAR\\b"
      << "\\bDECODE\\b"
      << "\\bDEGREES\\b"
      << "\\bDES_DECRYPT\\b"
      << "\\bDES_ENCRYPT\\b"
      << "\\bDIV\\b"
      << "\\bELT\\b"
      << "\\bENCODE\\b"
      << "\\bENCRYPT\\b"
      << "\\bESSION_USER\\b"
      << "\\bEXP\\b"
      << "\\bEXPORT_SET\\b"
      << "\\bEXTRACT\\b"
      << "\\bEXTRACTVALUE\\b"
      << "\\bFIELD\\b"
      << "\\bFIND_IN_SET\\b"
      << "\\bFLOOR\\b"
      << "\\bFORMAT\\b"
      << "\\bFOUND_ROWS\\b"
      << "\\bFROM_DAYS\\b"
      << "\\bFROM_UNIXTIME\\b"
      << "\\bGET_FORMAT\\b"
      << "\\bGET_LOCK\\b"
      << "\\bGREATEST\\b"
      << "\\bGROUP_CONCAT\\b"
      << "\\bHEX\\b"
      << "\\bHOUR_MICROSECOND\\b"
      << "\\bHOUR_MINUTE\\b"
      << "\\bHOUR_SECOND\\b"
      << "\\bIFNULL\\b"
      << "\\bINET_ATON\\b"
      << "\\bINET_NTOA\\b"
      << "\\bINSTR\\b"
      << "\\bINTERVAL\\b"
      << "\\bIS_FREE_LOCK\\b"
      << "\\bIS_USED_LOCK\\b"
      << "\\bISNULL\\b"
      << "\\bLAST_DAY\\b"
      << "\\bLAST_INSERT_ID\\b"
      << "\\bLCASE\\b"
      << "\\bLEAST\\b"
      << "\\bLEFT\\b"
      << "\\bLENGTH\\b"
      << "\\bLN\\b"
      << "\\bLOAD_FILE\\b"
      << "\\bLOCALTIMESTAMP\\b"
      << "\\bLOCATE\\b"
      << "\\bLOG\\b"
      << "\\bLOG10\\b"
      << "\\bLOG2\\b"
      << "\\bLOWER\\b"
      << "\\bLPAD\\b"
      << "\\bLTRIM\\b"
      << "\\bMAKE_SET\\b"
      << "\\bMAKEDATE\\b"
      << "\\bMAKETIME\\b"
      << "\\bMASTER_POS_WAIT\\b"
      << "\\bMAX\\b"
      << "\\bMD5\\b"
      << "\\bMICROSECOND\\b"
      << "\\bMID\\b"
      << "\\bMIN\\b"
      << "\\bMINUTE_MICROSECOND\\b"
      << "\\bMINUTE_SECOND\\b"
      << "\\bMONTH\\b"
      << "\\bMONTHNAME\\b"
      << "\\bNAME_CONST\\b"
      << "\\bNOW\\b"
      << "\\bNULLIF\\b"
      << "\\bOCT\\b"
      << "\\bOCTET_LENGTH\\b"
      << "\\bOLD_PASSWORD\\b"
      << "\\bORD\\b"
      << "\\bPASSWORD\\b"
      << "\\bPERIOD_ADD\\b"
      << "\\bPERIOD_DIFF\\b"
      << "\\bPI\\b"
      << "\\bPLUGINS\\b"
      << "\\bPOSITION\\b"
      << "\\bPOW\\b"
      << "\\bPOWER\\b"
      << "\\bQUOTE\\b"
      << "\\bRADIANS\\b"
      << "\\bRAND\\b"
      << "\\bRELEASE_LOCK\\b"
      << "\\bREVERSE\\b"
      << "\\bRIGHT\\b"
      << "\\bRLIKE\\b"
      << "\\bROUND\\b"
      << "\\bROW_COUNT\\b"
      << "\\bRPAD\\b"
      << "\\bRTRIM\\b"
      << "\\bSEC_TO_TIME\\b"
      << "\\bSECOND_MICROSECOND\\b"
      << "\\bSHA\\b"
      << "\\bSHA1\\b"
      << "\\bSIGN\\b"
      << "\\bSIN\\b"
      << "\\bSLEEP\\b"
      << "\\bSOUNDEX\\b"
      << "\\bSOUNDS\\b"
      << "\\bSPACE\\b"
      << "\\bSQL_CALC_FOUND_ROWS\\b"
      << "\\bSQR\\b"
      << "\\bSTD\\b"
      << "\\bSTDDEV_POP\\b"
      << "\\bSTDDEV_SAMP\\b"
      << "\\bSTDDEV\\b"
      << "\\bSTR_TO_DATE\\b"
      << "\\bSTRCMP\\b"
      << "\\bSUBDATE\\b"
      << "\\bSUBSTR\\b"
      << "\\bSUBSTRING_INDEX\\b"
      << "\\bSUBSTRING\\b"
      << "\\bSUBTIME\\b"
      << "\\bSYSDATE\\b"
      << "\\bSYSTEM_USER\\b"
      << "\\bTAN\\b"
      << "\\bTIME_FORMAT\\b"
      << "\\bTIME_TO_SEC\\b"
      << "\\bTIMEDIFF\\b"
      << "\\bTIMESTAMPADD\\b"
      << "\\bTIMESTAMPDIFF\\b"
      << "\\bTO_DAYS\\b"
      << "\\bTRIM\\b"
      << "\\bUCASE\\b"
      << "\\bUNCOMPRESS\\b"
      << "\\bUNCOMPRESSED_LENGTH\\b"
      << "\\bUNHEX\\b"
      << "\\bUNIX_TIMESTAMP\\b"
      << "\\bUpdateXML\\b"
      << "\\bUPPER\\b"
      << "\\bUTC_DATE\\b"
      << "\\bUTC_TIME\\b"
      << "\\bUTC_TIMESTAMP\\b"
      << "\\bUUID\\b"
      << "\\bVAR_POP\\b"
      << "\\bVAR_SAMP\\b"
      << "\\bVARIANCE\\b"
      << "\\bVERSION\\b"
      << "\\bWEEKDAY\\b"
      << "\\bWEEKOFYEAR\\b"
      << "\\bYEAR_MONTH\\b"
      << "\\bYEARWEEK\\b";
}

void MySQLHighlighter::fillDatatypes()
{
  datatypePatterns << "\\bBIGINT\\b"
      << "\\bBIT\\b"
      << "\\bBLOB\\b"
      << "\\bBOOL\\b"
      << "\\bBOOLEAN\\b"
      << "\\bCHAR\\b"
      << "\\bDATE\\b"
      << "\\bDATETIME\\b"
      << "\\bDEC\\b"
      << "\\bDECIMAL\\b"
      << "\\bDOUBLE\\b"
      << "\\bDOUBLEPRECISION\\b"
      << "\\bENUM\\b"
      << "\\bFLOAT\\b"
      << "\\bFLOAT4\\b"
      << "\\bFLOAT8\\b"
      << "\\bFULLTEXT\\b"
      << "\\bINT\\b"
      << "\\bINT1\\b"
      << "\\bINT2\\b"
      << "\\bINT3\\b"
      << "\\bINT4\\b"
      << "\\bINT8\\b"
      << "\\bINTEGER\\b"
      << "\\bLONG\\b"
      << "\\bLONGBLOB\\b"
      << "\\bLONGTEXT\\b"
      << "\\bMEDIUMBLOB\\b"
      << "\\bMEDIUMINT\\b"
      << "\\bMEDIUMTEXT\\b"
      << "\\bMIDDLEINT\\b"
      << "\\bNUMERIC\\b"
      << "\\bREAL\\b"
      << "\\bSERIAL\\b"
      << "\\bSMALLINT\\b"
      << "\\bTEXT\\b"
      << "\\bTIME\\b"
      << "\\bTIMESTAMP\\b"
      << "\\bTINYBLOB\\b"
      << "\\bTINYINT\\b"
      << "\\bTINYTEXT\\b"
      << "\\bVARBINARY\\b"
      << "\\bVARCHAR\\b"
      << "\\bVARCHARACTER\\b"
      << "\\bYEAR\\b";
}

void MySQLHighlighter::fillCharsets()
{
  charsetPatterns << "\\barmscii8\\b"
     << "\\barmscii8_bin\\b"
     << "\\barmscii8_general_ci\\b"
     << "\\bascii\\b"
     << "\\bascii_bin\\b"
     << "\\bascii_general_ci\\b"
     << "\\bbig5\\b"
     << "\\bbig5_bin\\b"
     << "\\bbig5_chinese_ci\\b"
     << "\\bbinary\\b"
     << "\\bbinary\\b"
     << "\\bcp1250\\b"
     << "\\bcp1250_bin\\b"
     << "\\bcp1250_croatian_ci\\b"
     << "\\bcp1250_czech_cs\\b"
     << "\\bcp1250_general_ci\\b"
     << "\\bcp1251\\b"
     << "\\bcp1251_bin\\b"
     << "\\bcp1251_bulgarian_ci\\b"
     << "\\bcp1251_general_ci\\b"
     << "\\bcp1251_general_cs\\b"
     << "\\bcp1251_ukrainian_ci\\b"
     << "\\bcp1256\\b"
     << "\\bcp1256_bin\\b"
     << "\\bcp1256_general_ci\\b"
     << "\\bcp1257\\b"
     << "\\bcp1257_bin\\b"
     << "\\bcp1257_general_ci\\b"
     << "\\bcp1257_lithuanian_ci\\b"
     << "\\bcp850\\b"
     << "\\bcp850_bin\\b"
     << "\\bcp850_general_ci\\b"
     << "\\bcp852\\b"
     << "\\bcp852_bin\\b"
     << "\\bcp852_general_ci\\b"
     << "\\bcp866\\b"
     << "\\bcp866_bin\\b"
     << "\\bcp866_general_ci\\b"
     << "\\bcp932\\b"
     << "\\bcp932_bin\\b"
     << "\\bcp932_japanese_ci\\b"
     << "\\bdec8\\b"
     << "\\bdec8_bin\\b"
     << "\\bdec8_swedish_ci\\b"
     << "\\beucjpms\\b"
     << "\\beucjpms_bin\\b"
     << "\\beucjpms_japanese_ci\\b"
     << "\\beuckr\\b"
     << "\\beuckr_bin\\b"
     << "\\beuckr_korean_ci\\b"
     << "\\bgb2312\\b"
     << "\\bgb2312_bin\\b"
     << "\\bgb2312_chinese_ci\\b"
     << "\\bgbk\\b"
     << "\\bgbk_bin\\b"
     << "\\bgbk_chinese_ci\\b"
     << "\\bgeostd8\\b"
     << "\\bgeostd8_bin\\b"
     << "\\bgeostd8_general_ci\\b"
     << "\\bgreek\\b"
     << "\\bgreek_bin\\b"
     << "\\bgreek_general_ci\\b"
     << "\\bhebrew\\b"
     << "\\bhebrew_bin\\b"
     << "\\bhebrew_general_ci\\b"
     << "\\bhp8\\b"
     << "\\bhp8_bin\\b"
     << "\\bhp8_english_ci\\b"
     << "\\bkeybcs2\\b"
     << "\\bkeybcs2_bin\\b"
     << "\\bkeybcs2_general_ci\\b"
     << "\\bkoi8r\\b"
     << "\\bkoi8r_bin\\b"
     << "\\bkoi8r_general_ci\\b"
     << "\\bkoi8u\\b"
     << "\\bkoi8u_bin\\b"
     << "\\bkoi8u_general_ci\\b"
     << "\\blatin1\\b"
     << "\\blatin1_bin\\b"
     << "\\blatin1_danish_ci\\b"
     << "\\blatin1_general_ci\\b"
     << "\\blatin1_general_cs\\b"
     << "\\blatin1_german1_ci\\b"
     << "\\blatin1_german2_ci\\b"
     << "\\blatin1_spanish_ci\\b"
     << "\\blatin1_swedish_ci\\b"
     << "\\blatin2\\b"
     << "\\blatin2_bin\\b"
     << "\\blatin2_croatian_ci\\b"
     << "\\blatin2_czech_cs\\b"
     << "\\blatin2_general_ci\\b"
     << "\\blatin2_hungarian_ci\\b"
     << "\\blatin5\\b"
     << "\\blatin5_bin\\b"
     << "\\blatin5_turkish_ci\\b"
     << "\\blatin7\\b"
     << "\\blatin7_bin\\b"
     << "\\blatin7_estonian_cs\\b"
     << "\\blatin7_general_ci\\b"
     << "\\blatin7_general_cs\\b"
     << "\\bmacce\\b"
     << "\\bmacce_bin\\b"
     << "\\bmacce_general_ci\\b"
     << "\\bmacroman\\b"
     << "\\bmacroman_bin\\b"
     << "\\bmacroman_general_ci\\b"
     << "\\bsjis\\b"
     << "\\bsjis_bin\\b"
     << "\\bsjis_japanese_ci\\b"
     << "\\bswe7\\b"
     << "\\bswe7_bin\\b"
     << "\\bswe7_swedish_ci\\b"
     << "\\btis620\\b"
     << "\\btis620_bin\\b"
     << "\\btis620_thai_ci\\b"
     << "\\bucs2\\b"
     << "\\bucs2_bin\\b"
     << "\\bucs2_czech_ci\\b"
     << "\\bucs2_danish_ci\\b"
     << "\\bucs2_esperanto_ci\\b"
     << "\\bucs2_estonian_ci\\b"
     << "\\bucs2_general_ci\\b"
     << "\\bucs2_hungarian_ci\\b"
     << "\\bucs2_icelandic_ci\\b"
     << "\\bucs2_latvian_ci\\b"
     << "\\bucs2_lithuanian_ci\\b"
     << "\\bucs2_persian_ci\\b"
     << "\\bucs2_polish_ci\\b"
     << "\\bucs2_romanian_ci\\b"
     << "\\bucs2_roman_ci\\b"
     << "\\bucs2_slovak_ci\\b"
     << "\\bucs2_slovenian_ci\\b"
     << "\\bucs2_spanish2_ci\\b"
     << "\\bucs2_spanish_ci\\b"
     << "\\bucs2_swedish_ci\\b"
     << "\\bucs2_turkish_ci\\b"
     << "\\bucs2_unicode_ci\\b"
     << "\\bujis\\b"
     << "\\bujis_bin\\b"
     << "\\bujis_japanese_ci\\b"
     << "\\butf8\\b"
     << "\\butf8_bin\\b"
     << "\\butf8_czech_ci\\b"
     << "\\butf8_danish_ci\\b"
     << "\\butf8_esperanto_ci\\b"
     << "\\butf8_estonian_ci\\b"
     << "\\butf8_general_ci\\b"
     << "\\butf8_hungarian_ci\\b"
     << "\\butf8_icelandic_ci\\b"
     << "\\butf8_latvian_ci\\b"
     << "\\butf8_lithuanian_ci\\b"
     << "\\butf8_persian_ci\\b"
     << "\\butf8_polish_ci\\b"
     << "\\butf8_romanian_ci\\b"
     << "\\butf8_roman_ci\\b"
     << "\\butf8_slovak_ci\\b"
     << "\\butf8_slovenian_ci\\b"
     << "\\butf8_spanish2_ci\\b"
     << "\\butf8_spanish_ci\\b"
     << "\\butf8_swedish_ci\\b"
     << "\\butf8_turkish_ci\\b"
     << "\\butf8_unicode_ci\\b";
}

void MySQLHighlighter::fillNumbersAndOperators()
{
  numberAndOperatorPatterns << "1" << "2" << "3" << "4" << "5" << "6" << "7" << "8" << "9" << "0"
      << "+" << "-" << "*" << "/" << "=" << "<" << ">" << "!= " << ">=" << "<=" << ":=";
}
